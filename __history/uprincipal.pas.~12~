unit uprincipal;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.Variants,
  System.Classes,
  Vcl.Graphics,
  Vcl.Controls,
  Vcl.Forms,
  Vcl.Dialogs,
  Vcl.ExtCtrls,
  Vcl.ComCtrls,
  Data.DB,
  Vcl.Grids,
  Vcl.DBGrids,
  Vcl.StdCtrls,
  Vcl.Buttons,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Param,
  FireDAC.Stan.Error,
  FireDAC.DatS,
  FireDAC.Phys.Intf,
  FireDAC.DApt.Intf,
  FireDAC.Stan.Async,
  FireDAC.DApt,
  FireDAC.Phys.MySQLDef,
  FireDAC.UI.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Phys,
  FireDAC.Phys.MySQL,
  FireDAC.VCLUI.Wait,
  FireDAC.Comp.Client,
  FireDAC.Comp.DataSet,
  FireDAC.Phys.FB,
  FireDAC.Phys.FBDef,
  FireDAC.Phys.IBBase,
  System.IniFiles, Vcl.DBCtrls;

type
  TFrmprincipal = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    Panel1: TPanel;
    Panel2: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    cbb1: TComboBox;
    edtPesquisa: TEdit;
    BitBtn1: TBitBtn;
    DBGrid1: TDBGrid;
    FDConnection1: TFDConnection;
    FDQuery1: TFDQuery;
    DataSource1: TDataSource;
    Label3: TLabel;
    Label4: TLabel;
    BtnSalvar: TBitBtn;
    Label5: TLabel;
    Label6: TLabel;
    EdtCodigo: TEdit;
    Label7: TLabel;
    EdtNome: TEdit;
    zQry: TFDQuery;
    DSdados: TDataSource;
    zQryCODIGO: TIntegerField;
    zQryNOME: TStringField;
    BitBtn2: TBitBtn;
    BtnExcluir: TBitBtn;
    BtnCancelar: TBitBtn;
    BitBtn3: TBitBtn;
    lblsubhgrupo: TLabel;
    EdtSubGrupo: TEdit;
    BtnSubGrupo: TBitBtn;
    EdTDescricao: TEdit;
    Qry: TFDQuery;
    BtnImprimir: TBitBtn;
    dbnvgrnavegador: TDBNavigator;
    procedure BitBtn1Click(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure BtnSalvarClick(Sender: TObject);
    procedure BitBtn3Click(Sender: TObject);
    procedure DBGrid1DblClick(Sender: TObject);
    procedure BitBtn2Click(Sender: TObject);
    procedure BtnExcluirClick(Sender: TObject);
    procedure EdtSubGrupoExit(Sender: TObject);
    procedure BtnSubGrupoClick(Sender: TObject);
    procedure EdtSubGrupoEnter(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure EdtSubGrupoChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure limparedits;
    function DescricaoGrupo(aValue : Integer) : String;
  end;

var
  Frmprincipal: TFrmprincipal;

implementation

{$R *.dfm}

uses uconsultasubgrupo;

procedure TFrmprincipal.BitBtn1Click(Sender: TObject);
begin
with FDQuery1 do
begin
    Close;
    SQL.Clear;
     case cbb1.ItemIndex of
     0: begin
         SQL.Add('Select * from grupo where codigo = ' + edtPesquisa.Text);
        end;
     1: begin
         SQL.Add('Select * from grupo where nome LIKE ' + QuotedStr( '%' + edtPesquisa.Text + '%' ));
        end;
     2: begin
        SQL.Add('Select * from grupo ');
     end;
     end;
     Open;
     Label3.Caption := IntToStr(RecordCount);
     if FDQuery1.RecordCount = 0 then
     ShowMessage('Registro não encontrado....');
    end;
  end;
procedure TFrmprincipal.BitBtn2Click(Sender: TObject);
begin
 with zQry do
     begin
     Close;
     SQL.Clear;
     SQL.Add('update grupo set  nome = :pnome ');
     SQL.Add('where codigo = :codigo');
     ParamByName('pnome').AsString := EdtNome.Text;
     try
     ExecSQL;
     ShowMessage('Atualizado com sucesso');
     except on E:Exception do
     ShowMessage('Erro ao atualizar o registro');
     end;
   end;
 PageControl1.ActivePage := TabSheet2;
 //btnlocalizarClick(sender);
 limparedits;
end;

procedure TFrmprincipal.BitBtn3Click(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TFrmprincipal.BtnExcluirClick(Sender: TObject);
begin
    with zQry do
   begin

     Close;
     SQL.Clear;
     SQL.Add('delete from grupo where codigo = :codigo');
     ParamByName('codigo').AsInteger := StrToInt(EdtCodigo.Text);
      try
        ExecSQL;
         ShowMessage('Excluido com seucesso');
      except on E:Exception do
        ShowMessage('Erro ao Excluir o registro');
      end;
   end;
 //PageControl1.ActivePage := TabSheet2;
 // btnlocalizarClick(sender);
 limparedits;
end;

procedure TFrmprincipal.BtnSalvarClick(Sender: TObject);
begin
 if  EdtNome.Text = '' then
  begin
  ShowMessage('Cadastro não realizado com campos vazios tente novamente...');
  Edtnome.SetFocus;
  end
  else
  with zQry do
  begin
    Close;
    SQL.Clear;
    SQL.Add('INSERT INTO grupo');
    SQL.Add('(nome, codsubgrupo)');
    SQL.Add('values (:pnome, :pcodsubgrupo)');
    ParamByName('pnome').AsString := EdtNome.Text;
    ParamByName('pcodsubgrupo').AsInteger := StrToInt(EdtSubGrupo.Text);
    ExecSQL;
    ShowMessage('Registro inserido com sucesso....');
    limparedits;
  end;
end;

procedure TFrmprincipal.BtnSubGrupoClick(Sender: TObject);
begin
  frmconsub := Tfrmconsub.Create(Application);
  frmconsub.Show;
end;

procedure TFrmprincipal.DBGrid1DblClick(Sender: TObject);
begin
  PageControl1.ActivePageIndex := 0;
  Frmprincipal.EdtCodigo.Text := DBGrid1.Fields[0].Value;
  Frmprincipal.EdtNome.Text := DBGrid1.Fields[1].Value;
  Frmprincipal.EdtSubGrupo.Text := DBGrid1.Fields[2].Value;
  EdTDescricao.text := DescricaoGrupo(StrToInt(EdtSubGrupo.text));
end;

function TFrmprincipal.DescricaoGrupo(aValue: Integer): String;
begin
  qry.close;
	qry.SQL.Clear;
	qry.SQL.Add('SELECT NOME FROM SUBGRUPO WHERE CODIGO = :CODIGO');
	qry.ParamByName('CODIGO').AsInteger := aValue;
	qry.Open;

	Result := qry.FieldByName('NOME').AsString;
end;
procedure TFrmprincipal.EdtSubGrupoChange(Sender: TObject);
begin
EdTDescricao.text := DescricaoGrupo(StrToInt(EdtSubGrupo.text));
end;

procedure TFrmprincipal.EdtSubGrupoEnter(Sender: TObject);
begin
//EdTDescricao.text := DescricaoGrupo(StrToInt(EdtSubGrupo.text));
end;

procedure TFrmprincipal.EdtSubGrupoExit(Sender: TObject);
begin
  //EdTDescricao.text := DescricaoGrupo(StrToInt(EdtSubGrupo.text));
end;
procedure TFrmprincipal.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if Key=VK_F4 then
  begin
  frmconsub := Tfrmconsub.Create(Application);
  frmconsub.Show;
  end;
end;

procedure TFrmprincipal.FormKeyPress(Sender: TObject; var Key: Char);
begin
 //verifica se a tecla pressionada é a tecla ENTER, conhecida pelo Delphi como #13
  If key = #13 then
  Begin
//se for, passa o foco para o próximo campo, zerando o valor da variável Key
  Key:= #0;
  Perform(Wm_NextDlgCtl,0,0);
end;
end;

procedure TFrmprincipal.limparedits;
begin
 EdtCodigo.Clear;
 EdtNome.Clear;
 EdtSubGrupo.Clear;
 EdTDescricao.Clear;
 EdtNome.SetFocus;
end;

end.
